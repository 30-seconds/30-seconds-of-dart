{
  "data": [
    {
      "id": "average",
      "type": "snippetListing",
      "title": "average",
      "attributes": {
        "text": "Returns the average value of a list of numbers.\n\nUse `iterable.reduce()` to get the sum of all the numbers in a list, divide by `iterable.length` to get the average.\n\n",
        "tags": [
          "math",
          "list",
          "beginner"
        ]
      },
      "meta": {
        "hash": "d2866701059e40ef5439560e73a896863b6ce2e04ae6bbbfd52e63bc88fb4afb"
      }
    },
    {
      "id": "averageBy",
      "type": "snippetListing",
      "title": "averageBy",
      "attributes": {
        "text": "Returns the average of a list, after mapping each element to a number using the provided function.\n\nUse `iterable.map()` to map each element to the numeric value returned by `fn`, `iterable.reduce()` to sum the values, divide by `iterable.length` to get the average.\n\n",
        "tags": [
          "math",
          "list",
          "function",
          "intermediate"
        ]
      },
      "meta": {
        "hash": "c10d973c2257a96fd40d7d964e1b396bbfaedd5f245ebd4649fdde8323a670df"
      }
    },
    {
      "id": "isEven",
      "type": "snippetListing",
      "title": "isEven",
      "attributes": {
        "text": "Returns `true` if the given number is even, `false` otherwise.\n\nChecks whether a number is odd or even using the modulo (`%`) operator. \nReturns `true` if the number is even, `false` if the number is odd.\n\n",
        "tags": [
          "math",
          "beginner"
        ]
      },
      "meta": {
        "hash": "81e2ea61320bff6729ee966a17d4918ff94f5fef16ea78f72217e280a3106f22"
      }
    },
    {
      "id": "isOdd",
      "type": "snippetListing",
      "title": "isOdd",
      "attributes": {
        "text": "Returns `true` if the given number is odd, `false` otherwise.\n\nChecks whether a number is odd or even using the modulo (`%`) operator. \nReturns `true` if the number is odd, `false` if the number is even.\n\n",
        "tags": [
          "math",
          "beginner"
        ]
      },
      "meta": {
        "hash": "a19d0b0952202d1e40cd20692b47454fae53b7a5ff39d2acf65e608cb0fd44aa"
      }
    },
    {
      "id": "max",
      "type": "snippetListing",
      "title": "max",
      "attributes": {
        "text": "Returns the maximum value in a list of numbers.\n\nUse `iterable.reduce()` in combination with `max()` to find the maximum value.\n\n",
        "tags": [
          "math",
          "list",
          "beginner"
        ]
      },
      "meta": {
        "hash": "aaccab0c111410652b5ff069e17263dc4ed12695afb3385a2ce4f76f50c182d8"
      }
    },
    {
      "id": "maxBy",
      "type": "snippetListing",
      "title": "maxBy",
      "attributes": {
        "text": "Returns the maximum value of a list, after mapping each element to a number using the provided function.\n\nUse `iterable.map()` to map each element to the numeric value returned by `fn`, `max()` to find the maximum value.\n\n",
        "tags": [
          "math",
          "list",
          "function",
          "intermediate"
        ]
      },
      "meta": {
        "hash": "67487fd1d1c669a4609658fb0b79463f6202c4bdaed116246f90c6733a83a69e"
      }
    },
    {
      "id": "min",
      "type": "snippetListing",
      "title": "min",
      "attributes": {
        "text": "Returns the minimum value in a list of numbers.\n\nUse `iterable.reduce()` in combination with `min()` to find the minimum value.\n\n",
        "tags": [
          "math",
          "list",
          "beginner"
        ]
      },
      "meta": {
        "hash": "a8d90c3c0061219ffe42a41f36d1a05b5aaf80cc27c20080732774bc88d22733"
      }
    },
    {
      "id": "minBy",
      "type": "snippetListing",
      "title": "minBy",
      "attributes": {
        "text": "Returns the minimum value of a list, after mapping each element to a number using the provided function.\n\nUse `iterable.map()` to map each element to the numeric value returned by `fn`, `min()` to find the minimum value.\n\n",
        "tags": [
          "math",
          "list",
          "function",
          "intermediate"
        ]
      },
      "meta": {
        "hash": "a4ca334714e310032c713857838da738470736ec365c3eccdf54400fdfea42f8"
      }
    },
    {
      "id": "sum",
      "type": "snippetListing",
      "title": "sum",
      "attributes": {
        "text": "Returns the sum value of a list of numbers.\n\nUse `iterable.reduce()` to sum all the numbers in a list.\n\n",
        "tags": [
          "math",
          "list",
          "beginner"
        ]
      },
      "meta": {
        "hash": "274f2625576afe02e9d8036e426a2f6d0ea9be26bfe6abe78f63dbceb5008a07"
      }
    },
    {
      "id": "sumBy",
      "type": "snippetListing",
      "title": "sumBy",
      "attributes": {
        "text": "Returns the sum of a list, after mapping each element to a number using the provided function.\n\nUse `iterable.map()` to map each element to the numeric value returned by `fn`, `iterable.reduce()` to sum the values.\n\n",
        "tags": [
          "math",
          "list",
          "function",
          "intermediate"
        ]
      },
      "meta": {
        "hash": "fbf7c20571477d7d4a33c6c73fe78862e26da45f2fddd2079e2af75b8b18678a"
      }
    }
  ],
  "meta": {
    "specification": "http://jsonapi.org/format/",
    "type": "snippetListingArray",
    "language": {
      "short": "dart",
      "long": "Dart"
    }
  }
}